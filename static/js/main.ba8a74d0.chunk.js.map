{"version":3,"sources":["components/PokemonTypesLabels.tsx","components/PokemonThumbnail.tsx","api.ts","components/AboutTabComponent.tsx","components/PokemonDrawer.tsx","App.tsx","theme.ts","index.tsx"],"names":["PokemonTypesLabels","list","direction","map","type","paddingX","paddingY","align","backgroundColor","borderRadius","width","textTransform","PokemonThumbnail","pokemon","onClick","types","padding","color","cursor","justify","fontSize","name","id","maxWidth","src","image","page","Promise","all","Array","fill","_","index","slice","fetch","then","res","json","rawPokemon","weight","height","abilities","ability","AboutTabComponent","titles","data","title","idx","textStyle","PokemonDrawer","onClose","toString","concat","it","charAt","toUpperCase","substring","join","isOpen","placement","size","ArrowBack","Star","marginBottom","zIndex","borderTopLeftRadius","borderTopRightRadius","marginTop","paddingTop","paddingBottom","App","React","pokemons","setPokemons","selected","setSelected","api","newPokemons","console","log","spacing","marginLeft","columns","gap","extendTheme","colors","grass","theme","green","fire","red","water","blue","normal","flying","bug","teal","electric","purple","psychic","yellow","ground","orange","ReactDOM","render","StrictMode","resetCSS","document","getElementById"],"mappings":"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","file":"static/js/main.ba8a74d0.chunk.js","sourcesContent":["import { Stack, StackDirection, Text } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { Pokemon } from \"../types\";\n\ninterface Props {\n    list: string[];\n    direction: StackDirection;\n}\n\nconst PokemonTypesLabels: React.FC<Props> = ({ list, direction }) => {\n    return (\n        <Stack\n            direction={direction}\n        >\n            {list.map((type) => (\n                <Text\n                    key={type}\n                    paddingX={2}\n                    paddingY={1}\n                    align=\"center\"\n                    backgroundColor=\"rgba(255,255,255, 0.2)\"\n                    borderRadius={9999}\n                    width=\"fit-content\"\n                    textTransform = 'capitalize'\n                >\n                    {type}\n                </Text>\n            ))}\n        </Stack>\n    );\n};\n\nexport default PokemonTypesLabels\n\n","import { Box, Heading, Image, Stack, Text } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { Pokemon } from \"../types\";\nimport PokemonTypesLabels from \"./PokemonTypesLabels\";\n\ninterface Props {\n    pokemon: Pokemon;\n    onClick: VoidFunction\n}\n\nconst PokemonThumbnail: React.FC<Props> = ({pokemon, onClick}) => {\n    return (\n        <Box \n        backgroundColor = {`${pokemon.types[0]}.300`} \n        borderRadius= {12} \n        padding= {3} \n        color= \"white\"\n        cursor= \"pointer\"\n        onClick= {onClick}\n        >\n            <Stack>\n                <Stack direction = \"row\" align=\"baseline\" justify=\"space-between\">\n                    <Heading fontSize=\"xl\" textTransform=\"capitalize\">{pokemon.name}</Heading>\n                    <Text>#{pokemon.id}</Text>\n                </Stack>\n                <Stack direction=\"row\" justify=\"space-between\">\n                <PokemonTypesLabels list={pokemon.types} direction = \"column\"/>\n                <Image width=\"100%\" maxWidth=\"90px\" src={pokemon.image} />\n                </Stack>\n            </Stack>\n        </Box>\n    );\n};\n\nexport default PokemonThumbnail;","import { Pokemon } from \"./types\";\n\nconst PAGE_SIZE = 50;\n\nexport default {\n    list: (page: number): Promise<Pokemon[]> => {\n        return Promise.all(\n            new Array(page * PAGE_SIZE + 1)\n            .fill(true)\n            .map((_, index) => index)\n            .slice(1)\n            .map(id => fetch(`https://pokeapi.co/api/v2/pokemon/${id}`).then((res)=> res.json()\n            .then((rawPokemon: any) => ({    //rawPokemon es la data en JSON que entrega pokeapi\n                id: rawPokemon.id,\n                name: rawPokemon.name,\n                image: `https://pokeres.bastionbot.org/images/pokemon/${rawPokemon.id}.png`,\n                types: rawPokemon.types.map(({type}: any) => type.name),\n                weight: rawPokemon.weight,\n                height: rawPokemon.height,\n                abilities: rawPokemon.abilities.map(({ability}: any) => ability.name)\n            })))),\n            );\n    }\n}","import { Text, Stack } from \"@chakra-ui/react\";\nimport React from \"react\";\n\ninterface Props {\n  titles: string[];\n  data: string[];\n}\n\nconst AboutTabComponent: React.FC<Props> = ({ titles, data }) => {\n  return (\n    <Stack \n    width= '100%'\n    paddingX={2}\n    paddingY={1}\n    align=\"justify\"\n    backgroundColor=\"rgba(255,255,255, 0.2)\"\n    borderRadius={9999}>\n      {titles.map((title, idx) => {\n        return (\n          <Stack direction='row' justify='space-between'>\n            <Text color=\"gray.500\" textStyle= 'bold'>{title}</Text>\n            <Text color=\"black\">{data[idx]}</Text>\n          </Stack>\n        );\n      })}\n    </Stack>\n  );\n};\n\nexport default AboutTabComponent;\n","import { Heading, Image, Stack, Text } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { Drawer, DrawerOverlay, DrawerContent } from \"@chakra-ui/react\";\nimport { ArrowBackIcon, StarIcon } from \"@chakra-ui/icons\";\n\nimport { Pokemon } from \"../types\";\nimport PokemonTypesLabels from \"./PokemonTypesLabels\";\nimport AboutTabComponent from \"./AboutTabComponent\";\n\ninterface Props {\n  pokemon: Pokemon;\n  onClose: VoidFunction;\n}\n\nconst PokemonDrawer: React.FC<Props> = ({ pokemon, onClose }) => {\n  const titles = [\"Height\", \"Weight\", \"Abilities\"];\n  const data = [\n    pokemon.height.toString().concat(' ft.'),\n    pokemon.weight.toString().concat(' lbs.'),\n    pokemon.abilities.map((it) => it.charAt(0).toUpperCase() + it.substring(1)).join(\", \"),\n  ];\n  return (\n    <Drawer isOpen placement=\"right\" size=\"lg\" onClose={onClose}>\n      <DrawerOverlay>\n        <DrawerContent>\n          {/* top drawer content */}\n          <Stack\n            backgroundColor={`${pokemon.types[0]}.300`}\n            padding={6}\n            color=\"white\"\n          >\n            <Stack\n              direction=\"row\"\n              align=\"center\"\n              justify=\"space-between\"\n              fontSize=\"2xl\"\n            >\n              <ArrowBackIcon onClick={onClose} />\n              <StarIcon />\n            </Stack>\n\n            <Stack direction=\"row\">\n              <Stack width=\"100%\">\n                <Stack direction=\"row\" align=\"baseline\" justify=\"space-between\">\n                  <Heading textTransform=\"capitalize\">{pokemon.name}</Heading>\n                  <Text>#{pokemon.id}</Text>\n                </Stack>\n                <PokemonTypesLabels list={pokemon.types} direction=\"row\" />\n                <Image\n                  src={pokemon.image}\n                  marginBottom={-12}\n                  zIndex={1}\n                  paddingX={6}\n                ></Image>\n              </Stack>\n            </Stack>\n          </Stack>\n          {/* bottom drawer content */}\n          <Stack\n            backgroundColor=\"whitesmoke\"\n            height='100%'\n            borderTopLeftRadius= {24}\n            borderTopRightRadius={24}\n            marginTop={-12}\n            paddingTop={20}\n            paddingX={6}\n            paddingBottom={6}\n          >\n            <AboutTabComponent titles={titles} data={data} />\n          </Stack>\n        </DrawerContent>\n      </DrawerOverlay>\n    </Drawer>\n  );\n};\n\nexport default PokemonDrawer;\n","import * as React from 'react';\nimport { Heading, SimpleGrid, Stack, Text } from \"@chakra-ui/react\";\nimport PokemonThumbnail from './components/PokemonThumbnail'\nimport api from \"./api\";\nimport { Pokemon } from \"./types\";\nimport PokemonDrawer from './components/PokemonDrawer';\n\nconst App: React.FC = () => {\n  const [pokemons, setPokemons] = React.useState<Pokemon[]>([]);\n  const [page, setPage] = React.useState<number>(1);\n  const [selected, setSelected] = React.useState<Pokemon | null>(null);\n  React.useEffect(() => {\n    api.list(page)\n      .then(newPokemons => setPokemons(pokemons => pokemons.concat(newPokemons)));\n\n  }, [page]);\n\n  console.log(pokemons)\n\n  return (\n    <Stack \n    padding={3} \n    spacing={6}\n    backgroundColor='whitesmoke'\n    >1\n      <Heading \n      fontSize=\"4xl\" \n      marginLeft={3}\n      >\n        Pokedex</Heading>\n      <SimpleGrid columns={2} gap={3} padding={3}>\n\n        {pokemons.map(pokemon => <PokemonThumbnail\n          onClick={() => setSelected(pokemon)}\n          key={pokemon.id}\n          pokemon={pokemon}\n        ></PokemonThumbnail>\n        )}\n      </SimpleGrid>\n      {selected && <PokemonDrawer pokemon={selected} onClose={() => setSelected(null)} />}\n    </Stack>\n  );\n};\n\nexport default App;\n\n","// 1. Import the extendTheme function\nimport {theme} from \"@chakra-ui/theme\"\nimport { extendTheme } from \"@chakra-ui/react\"\n\n// 2. Extend the theme to include custom colors, fonts, etc\nexport default extendTheme({\n  colors: {\n      grass: theme.colors.green,\n      fire: theme.colors.red,\n      water: theme.colors.blue,\n      normal: theme.colors.blue,\n      flying: theme.colors.blue,\n      bug: theme.colors.teal,\n      electric: theme.colors.purple,\n      psychic: theme.colors.yellow,\n      ground: theme.colors.orange,\n  }\n})\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ChakraProvider } from \"@chakra-ui/react\"\nimport theme from \"./theme\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider resetCSS theme= {theme}>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}